
 struct ListNode {
     int val;
     ListNode *next;
     ListNode() : val(0), next(nullptr) {}
     ListNode(int x) : val(x), next(nullptr) {}
     ListNode(int x, ListNode *next) : val(x), next(next) {}
 };
 

class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        ListNode *n0 = head;
        ListNode *n1;
        ListNode *n2;
        
        while(n0 != nullptr) 
        {
            n1 = n0 -> next;
            if(n1 != nullptr) {
                n2 = n1 -> next;
                n1 -> next = n0;
                n0 -> next = nullptr;
            } else {
                // we store in n2 the new head
                n2 = n0;
            }

            n0 = n1; 
        }
        return n2;
    }
};

int main() {
    return 0;
};